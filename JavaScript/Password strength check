/**
 * Checks the strength of a password and provides suggestions.
 * @param {string} password
 * @returns {{strength: string, suggestions: string[]}}
 */
function checkPasswordStrength(password) {
    const suggestions = [];
    let strength = 0;
    const specialChars = /[@$!%*?&]/;

    if (password.length >= 8) {
        strength++;
    } else {
        suggestions.push("Use at least 8 characters.");
    }

    if (/[a-z]/.test(password)) {
        strength++;
    } else {
        suggestions.push("Add lowercase letters.");
    }

    if (/[A-Z]/.test(password)) {
        strength++;
    } else {
        suggestions.push("Add uppercase letters.");
    }

    if (/[0-9]/.test(password)) {
        strength++;
    } else {
        suggestions.push("Add numbers.");
    }

    if (specialChars.test(password)) {
        strength++;
    } else {
        suggestions.push("Add special characters (@$!%*?&).");
    }

    // Check for repeated characters
    if (/(\w)\1{2,}/.test(password)) {
        suggestions.push("Avoid repeated characters.");
        strength--;
    }

    // Check for common passwords
    const commonPasswords = ["password", "123456", "qwerty", "letmein"];
    if (commonPasswords.includes(password.toLowerCase())) {
        suggestions.push("Avoid common passwords.");
        strength = 1;
    }

    let label;
    switch (true) {
        case strength >= 5:
            label = "Very Strong";
            break;
        case strength === 4:
            label = "Strong";
            break;
        case strength === 3:
            label = "Moderate";
            break;
        case strength === 2:
            label = "Weak";
            break;
        default:
            label = "Very Weak";
    }

    return { strength: label, suggestions };
}
